xlab="n.data sets", ylab="error.rate", col="blue")
library(english)
library(languageR)
library(languageR)
head(english)
with(english, plot(ncount, RTlexdec))
with(english, plot(Ncount, RTlexdec))
with(english, plot(Ncount, RTlexdec,
main="RT against neighborhood density",
col="blue")
with(english, plot(Ncount, RTlexdec,
main="RT against neighborhood density",
col="blue"))
with(english, plot(Ncount, RTlexdec,
main="RT against neighborhood density",
col="blue"))
with(english, plot(Ncount, RTlexdec,
main="RT against neighborhood density",
col="blue"), pch=16)
with(english, plot(Ncount, RTlexdec,
main="RT against neighborhood density",
col="blue"), pch=20)
m = lm(RTlexdec ~ Ncount, data=Enlish)
m = lm(RTlexdec ~ Ncount, data=English)
library(languageR)
m = lm(RTlexdec ~ Ncount, data=English)
m = lm(RTlexdec ~ Ncount, data=english)
m
with(english, plot(RTlexdec, Ncount,
main="RT against neighborhood density",
col="blue"), pch=20)
library(languageR)
with(english, plot(Ncount, RTlexdec,
main="RT against neighborhood density",
col="blue"), pch=20)
summar(m)
summary(m)
m$intercept
m$Intercept
m[1]
m$coefficients[1]
with(english, plot(Ncount, exp(RTlexdec),
main="RT against neighborhood density",
col="blue"), pch=20)
m = lm(exp(RTlexdec) ~ Ncount, data=english)
summary(m)
m$coefficients[1]
m$coefficients[2]
m$coefficients[1]
m$p.value
m$p.values
summary(m)
m$pvalues
m$pr
m[1]
m[2]
m[3]
m[4]
m[5]
m[5]
m[7]
head(m[7])
m[8]
m[9]
m[10]
m[11]
m
m = lm(exp(RTlexdec) ~ Ncount, data=english)
summary(m)
summary(m)$p.value
summary(m)$pr
summary(m)
plot(Ncount, resid(m), main="Model residiuals",
xlab="RT", ylab="Neighborhood density")
plot(english$Ncount, resid(m), main="Model residiuals",
xlab="RT", ylab="Neighborhood density")
plot(english$Ncount, resid(m), main="Model residiuals",
xlab="RT", ylab="Neighborhood density",
col="purple")
m = lm(exp(RTlexdec) ~ Ncount, data=english)
summary(m)
m$coefficients[1]
plot(english$Ncount, resid(m), main="Model residiuals",
xlab="RT", ylab="Neighborhood density",
col="purple")
with(english, plot(Ncount, exp(RTlexdec),
main="RT against neighborhood density",
col="blue"), pch=20)
m = lm(exp(RTlexdec) ~ Ncount, data=english)
m
abline(m)
abline(m, col="red")
abline(m, col="red", pch=24)
abline(m, col="red")
plot(english$Ncount, resid(m), main="Model residiuals",
xlab="RT", ylab="Neighborhood density",
col="purple")
summary(m)
anova(m)
anova(m)["Df"]
anova(m)["Sum Sq"]
anova(m)
anova(m)["Sum sq"][1] / anova(m)["Sum sq"][2]
anova(m)["Sum Sq"][1] / anova(m)["Sum Sq"][2]
anova(m)
anova(m)["Sum Sq"]
anova(m)["Sum Sq"][1]
anova(m)["Sum Sq"][1,]
anova(m)["Sum Sq"][1,] / anova(m)["Sum Sq"][2,]
summary(m)
summary(m)
anova(m)["Sum Sq"][1,] / anova(m)["Sum Sq"][2,]
anova(m)
summary(m)
summary(m)["Residual standard error"]
plot(english$Ncount, resid(m), main="Model residiuals",
xlab="Neighborhood density", ylab="RT",
col="purple")
with(english, plot(Ncount, exp(RTlexdec),
main="RT against neighborhood density",
col="blue"), pch=20)
m = lm(exp(RTlexdec) ~ Ncount, data=english)
abline(m, col="red")
abline(v=mean(english$Ncount),
h=mean(exp(english$RTlexdec)) col="green")
abline(v=mean(english$Ncount), col="green")
?abline
abline(h=mean(exp(english$RTlexdec), col="green")
abline(v=mean(english$Ncount), col="green")
abline(h=mean(exp(english$RTlexdec), col="green")
abline(v=mean(english$Ncount), col="green")
abline(h=mean(exp(english$RTlexdec), col="green"))
m = lm(exp(RTlexdec) ~ Ncount, data=english)
with(english, plot(Ncount, exp(RTlexdec),
main="RT against neighborhood density",
col="blue"), pch=20)
m = lm(exp(RTlexdec) ~ Ncount, data=english)
abline(m, col="red")
abline(v=mean(english$Ncount), col="green")
abline(h=mean(exp(english$RTlexdec), col="green"))
abline(h=mean(exp(english$RTlexdec)), col="green")
with(english, plot(Ncount, exp(RTlexdec),
main="RT against neighborhood density",
col="blue"), pch=20)
m = lm(exp(RTlexdec) ~ Ncount, data=english)
abline(m, col="red")
abline(v=mean(english$Ncount), col="green", lty=2)
abline(h=mean(exp(english$RTlexdec)), col="green", lty=2)
coe(m)
coef(m)
coef(m)[1]
with(english, plot(Ncount, exp(RTlexdec),
main="RT against neighborhood density",
col="blue"), pch=20)
abline(a=coef(m)[1], b=coef(m)[2], col="red")
abline(v=mean(english$Ncount), col="green", lty=2)
abline(h=mean(exp(english$RTlexdec)), col="green", lty=2)
with(english, plot(Ncount, exp(RTlexdec),
main="RT against neighborhood density",
col="blue"), pch=20)
abline(a=coef(m)[1], b=coef(m)[2], col="red")
abline(v=mean(english$Ncount), col="green", lty=2)
abline(h=mean(exp(english$RTlexdec)), col="green", lty=2)
plot(resid(m), main="Model residiuals",
xlab="Neighborhood density", ylab="RT",
col="purple")
plot(resid(m), main="Model residiuals")
with(english, plot(Ncount, RTlexdec,
main="RT against neighborhood density",
col="blue"), pch=20)
m = lm(RTlexdec ~ Ncount, data=english)
summary(m)
m$coefficients[1]
abline(m, col="red")
coef(m)
with(english, plot(Ncount, RTlexdec,
main="RT against neighborhood density",
col="blue"), pch=20)
abline(a=coef(m)[1], b=coef(m)[2], col="red")
plot(resid(m), main="Model residiuals")
resid(m)[1500]
with(english, plot(Ncount, RTlexdec,
main="RT against neighborhood density",
col="blue"), pch=20)
m = lm(RTlexdec ~ Ncount, data=english)
summary(m)
m$coefficients[1]
abline(m, col="red")
coef(m)
with(english, plot(Ncount, RTlexdec,
main="RT against neighborhood density",
col="blue"), pch=20)
abline(a=coef(m)[1], b=coef(m)[2], col="red")
abline(v=mean(english$Ncount), col="green", lty=2)
abline(h=mean(english$RTlexdec), col="green", lty=2)
plot(resid(m), main="Model residiuals")
par=mfrow(c(1,2))
par(mfrow=c(1,2))
with(english, plot(Ncount, RTlexdec,
main="RT against neighborhood density",
col="blue"), pch=20)
abline(a=coef(m)[1], b=coef(m)[2], col="red")
plot(resid(m), main="Model residiuals")
plot(resid(m), main="Model residiuals")
plot(english$RTlexdec, main="RTlexdec")
m
plot(sort(english$RTlexdec), main="RTlexdec")
plot(Ncount, sort(english$RTlexdec), main="RTlexdec")
plot(NCount, sort(english$RTlexdec), main="RTlexdec")
plot(english$Ncount, sort(english$RTlexdec), main="RTlexdec")
plot(sort(english$RTlexdec), english$Ncount, main="RTlexdec")
plot(english$RTlexdec)
plot(sort(english$RTlexdec)
plot(sort(english$RTlexdec))
mean(english$RTlexdec)
length(english$RTlexdec)
english$RTlexdec[length(english$RTlexdec)/2]
plot(resid(m), main="Model residiuals")
4568/2
?english
m = lm(RTlexdec ~ Ncount, data=english)
summary(m)
abline(m, col="red")
coef(m)
with(english, plot(Ncount, RTlexdec,
main="RT against neighborhood density",
col="blue"), pch=20)
abline(a=coef(m)[1], b=coef(m)[2], col="red")
plot(resid(m), main="Model residiuals")
english[1500,]
english[1400:1600,]
english[1450:1550,]
english[2500:3500, AgeSubject]
?english
english[2500:3500, "AgeSubject"]
english[, "AgeSubject"]
par(mfrow=c(1,1))
plot(english$RTlexdec, main="RTlexdec by Index")
plot(english$AgeSubeject)
plot(english$AgeSubject)
factor(english$AgeSubject)
plot(factor(english$AgeSubject))
plot(as.numeric(factor(english$AgeSubject))
)
barplot(as.numeric(factor(english$AgeSubject)))
barplot(as.numeric(factor(english$AgeSubject))-1)
barplot(as.numeric(factor(english$AgeSubject)))
barplot(as.numeric(factor(english$AgeSubject)), main="Age factors"
)
plot(resid(m), main="Model residiuals")
par(mfrow=c(1,2))
factor(english$AgeSubject)
barplot(as.numeric(factor(english$AgeSubject)), main="Age factors")
plot(resid(m), main="Model residiuals")
mean(which(english$AgeSubjects == "Young"))
mean(english$RTlexdec[which(english$AgeSubjects == "Young")])
mean(english$RTlexdec, which(english$AgeSubjects == "Young")])
which(english$AgeSubjects == "Young")
which(english$AgeSubjects == "young")
mean(which(english$RTlexdec[,"AgeSubject"] == "Young"))
mean(which(english[,"AgeSubject"] == "Young"))
mean(which(english[,"AgeSubject"] == "young"))
mean(which(english$RTlexdec[,"AgeSubject"] == "young"))
which(english[,"AgeSubject"] == "young"))
test = which(english[,"AgeSubject"] == "young"))
test = which(english[,"AgeSubject"] == "young")
test
plot(test)
old.indices = which(english[,"AgeSubject"] == "old")
plot(old, add=T)
plot(old.indices, add=T)
young.indices = which(english[,"AgeSubject"] == "young")
young.indices = which(english[,"AgeSubject"] == "young")
plot(young.indices)
plot(old.indices, add=T)
english[young.indices,]
english[young.indices[1:10]
english[young.indices[1:10],]
english[young.indices, "AgeSubject"]
m.Ncount.Age = lm(RTlexdec ~ Ncount + SubjectAge, data=english)
m.Ncount.Age = lm(RTlexdec ~ Ncount + AgeSubject, data=english)
summary(m.Ncount.Age)
anova(m.Ncount.Age)
rm(list=ls())
source("analysis/useful_dplyr.R")
library("rjson")
source(paste0(p,"analysis/useful_dplyr.R"))
p = file.path("~/Desktop/Projects/scalar_implicature/")
source(paste0(p,"analysis/useful_dplyr.R"))
library("rjson")
source("analysis/useful_dplyr.R")
library("rjson")
files <- dir(paste0(p,"production-results/e7/"), pattern = "*.json")
d.raw <- data.frame()
for (f in files) {
jf <- paste("production-results/e7/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(workerid = jd$WorkerId,
context = jd$answer$context,
stars = as.numeric(jd$answer$judgment),
language = jd$answer$language)
d.raw <- bind_rows(d.raw, id)
}
files <- dir(paste0(p,"production-results/e7/"), pattern = "*.json")
files
d.raw <- data.frame()
jf <- paste(p,"production-results/e7/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(workerid = jd$WorkerId,
context = jd$answer$context,
stars = as.numeric(jd$answer$judgment),
language = jd$answer$language)
d.raw <- bind_rows(d.raw, id)
d <- d.raw
d.raw
d
density <- d %>%
mutate(n = n()) %>%
group_by(stars) %>%
summarise(prop = n() / n[1])
density
qplot(stars, prop,
geom="bar", stat = "identity",
binwidth = 1, data=density)
density <- d %>%
group_by(context) %>%
mutate(n = n()) %>%
group_by(stars, context) %>%
summarise(prop = n() / n[1])
qplot(stars, prop, facets = . ~ context,
geom="bar", stat = "identity",
binwidth = 1, data=density)
d
density <- d %>%
mutate(n = n()) %>%
group_by(stars) %>%
summarise(prop = n() / n[1])
density
d.raw
mean(d.raw$stars)
d.raw$stars
files <- dir(paste0(p,"production-results/e7/"), pattern = "*.json")
d.raw <- data.frame()
for (f in files) {
jf <- paste(p,"production-results/e7/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(workerid = jd$WorkerId,
context = jd$answer$context,
stars = as.numeric(jd$answer$judgment),
language = jd$answer$language)
d.raw <- bind_rows(d.raw, id)
}
d <- d.raw
density <- d %>%
mutate(n = n()) %>%
group_by(stars) %>%
summarise(prop = n() / n[1])
density
qplot(stars, prop,
geom="bar", stat = "identity",
binwidth = 1, data=density)
density <- d %>%
group_by(context) %>%
mutate(n = n()) %>%
group_by(stars, context) %>%
summarise(prop = n() / n[1])
qplot(stars, prop, facets = . ~ context,
geom="bar", stat = "identity",
binwidth = 1, data=density)
raw
d.raw
names(d.raw)
l0 = lm(stars ~ context, data=d)
l0
d <- d.raw
l0 = lm(stars ~ context, data=d)
summary(l0)
density <- d %>%
group_by(context)
density
density <- d %>%
group_by(context) %>%
mutate(n = n()) %>%
group_by(stars, context)
density
density <- d %>%
group_by(context) %>%
mutate(n = n()) %>%
group_by(stars, context) %>%
summarise(prop = n() / n[1])
density
d.raw
d1 <- d.raw
ms = summarise(d1, rating = mean(stars))
ms
mn = group_by(context)
mn = group_by(data, context, stars)
mn = group_by(d1, context, stars)
mn
ms = summarise(mn, rating = mean(stars))
= summarise(mn, rating = mean(stars))
ms = summarise(mn, rating = mean(stars))
ms
d1 <- d.raw
mn = group_by(d1, context, stars)
mn
mn = group_by(d1, context, stars)
ms = summarise(mn, rating = mean(stars))
ms
ms = summarise(mn, mn = ()))
ms = summarise(mn, mn = ())
d1 <- d.raw
mn = group_by(d1, context, stars)
ms = summarise(mn, mn = ())
ms = summarise(mn, d1 = ())
context = group_by(d1, context, stars)
context
d1 <- d.raw
d1
context = group_by(d1, context, stars)
context
d1 <- d.raw
context <- group_by(d1,context)
context <- group_by(d1,context)
context
( test <- summarize(context,count=n()) )
( test <- summarize(context,mean=n()) )
context <- group_by(d1,context, stars)
( test <- summarize(context,mean=n()) )
( test <- summarize(context,mean=mean(stars)) )
context <- group_by(d1,context, stars)
byContext <- group_by(d1,context)
context_ms <- summarize(byContext,n=n(),mn=mean(stars)
context_ms <- summarize(byContext,n=n(),mn=mean(stars))
context_ms
byContext <- group_by(d1,context)
byContext
context_ms <- summarize(byContext,n=n(),mn=mean(stars))
context_ms
context_ms <- summarize(byContext,mn=mean(stars))
context_ms
qplot(mn, context, facets = . ~ context,
geom="bar", stat = "identity",
binwidth = 1, data=context_ms)
qplot(mn, context,
geom="bar", stat = "identity",
binwidth = 1, data=context_ms)
qplot(context, mn,
geom="bar", stat = "identity",
binwidth = 1, data=context_ms)
?t.test
context_ms
d1[, "context"=="alone"]
d1
d1[, "context"] == "alone"
which(d1[, "context"] == "alone")
d1[, which(d1[, "context"] == "alone")]
d1[which(d1[, "context"] == "alone"),]
alone = d1[which(d1[, "context"] == "alone"),]
birthday = d1[which(d1[, "context"] == "for a birthday"),]
birthday
d1
birthday = d1[which(d1[, "context"] == "for a birthday party"),]
birthday
t.test(alone, birthday)
with(d.raw, t.test(context == "alone", context == "for a birthday part"))
with(d.raw, t.test(context == "alone", context == "for a birthday party"))
with(d.raw, t.test(context ="alone", context = "for a birthday party"))
t.test(alone, birthday)
?t.test
t.test(1:10, y = c(7:20))
?t.test(x=alone, y=birthday)
t.test(x=alone, y=birthday)
alone
t.test(x=alone$stars, y=birthday$stars)
d1 <- d.raw
byContext <- group_by(d1,context)
context_ms <- summarize(byContext,mn=mean(stars))
qplot(context, mn,
geom="bar", stat = "identity",
binwidth = 1, data=context_ms)
alone = d1[which(d1[, "context"] == "alone"),]
birthday = d1[which(d1[, "context"] == "for a birthday party"),]
t.test(x=alone$stars, y=birthday$stars)
qplot(stars, prop,
geom="bar", stat = "identity",
binwidth = 1, data=density)
pdf("plots/e7.pdf", width = 8, height = 4)
qplot(context, mn,
geom="bar", stat = "identity",
binwidth = 1, data=context_ms)
dev.off()
qplot(context, mn,
geom="bar", stat = "identity",
binwidth = 1, data=context_ms)
d1 <- d.raw
byContext <- group_by(d1,context)
context_ms <- summarize(byContext,mn=mean(stars))
pdf("plots/e7.pdf", width = 8, height = 4)
qplot(context, mn,
geom="bar", stat = "identity",
binwidth = 1, data=context_ms)
dev.off()
alone = d1[which(d1[, "context"] == "alone"),]
birthday = d1[which(d1[, "context"] == "for a birthday party"),]
t.test(x=alone$stars, y=birthday$stars)
pdf(paste0(p,"plots/e7.pdf", width = 8, height = 4))
qplot(context, mn,
geom="bar", stat = "identity",
binwidth = 1, data=context_ms)
dev.off()
t.test(x=alone$stars, y=birthday$stars)
