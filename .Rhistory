}
return(nn / norm)
}
run.rsa <- function(d, alpha = 1, useprior = TRUE, usenone = FALSE) {
mat <- d %>%
select(stars, degree, speaker.p) %>%
spread(degree, speaker.p) %>%
mutate(hi = hi / sum(hi),
low = low / sum(low)) %>%
select(hi, low)
if (usenone) {
mat$none <- c(.8, .2, 0, 0, 0)
mat$bad <- c(.25, .5, .25, 0, 0)
}
d$pred <- round(as.numeric(mapply(norm.post,
d$stars,
d$degree,
MoreArgs = list(m = mat,
alpha = alpha,
useprior = useprior))),
digits=4)
return(d)
}
data <- left_join(speaker, listener) %>%
left_join(priors) %>%
rowwise %>%
select(scale, degree, stars, speaker.p, listener.p, prior.p) %>%
mutate(listener.p = ifelse(is.na(listener.p), 0, listener.p)) %>%
group_by(scale)
setwd("~/Desktop/Projects/scalar_implicature/models")
setwd("~/Desktop/Projects/scalar_implicature")
run.rsa <- function(d, alpha = 1, useprior = TRUE, usenone = FALSE) {
mat <- d %>%
select(stars, degree, speaker.p) %>%
spread(degree, speaker.p) %>%
mutate(hi = hi / sum(hi),
low = low / sum(low)) %>%
select(hi, low)
if (usenone) {
mat$none <- c(.8, .2, 0, 0, 0)
mat$bad <- c(.25, .5, .25, 0, 0)
}
d$pred <- round(as.numeric(mapply(norm.post,
d$stars,
d$degree,
MoreArgs = list(m = mat,
alpha = alpha,
useprior = useprior))),
digits=4)
return(d)
}
data <- left_join(speaker, listener) %>%
data <- left_join(speaker, listener) %>%
left_join(priors) %>%
rowwise %>%
select(scale, degree, stars, speaker.p, listener.p, prior.p) %>%
mutate(listener.p = ifelse(is.na(listener.p), 0, listener.p)) %>%
group_by(scale)
data <- left_join(speaker, listener) %>%
left_join(priors)
source("analysis/useful_dplyr.R")
library(rjson)
run.rsa <- function(d, alpha = 1, useprior = TRUE, usenone = FALSE) {
mat <- d %>%
select(stars, degree, speaker.p) %>%
spread(degree, speaker.p) %>%
mutate(hi = hi / sum(hi),
low = low / sum(low)) %>%
select(hi, low)
if (usenone) {
mat$none <- c(.8, .2, 0, 0, 0)
mat$bad <- c(.25, .5, .25, 0, 0)
}
d$pred <- round(as.numeric(mapply(norm.post,
d$stars,
d$degree,
MoreArgs = list(m = mat,
alpha = alpha,
useprior = useprior))),
digits=4)
return(d)
}
data <- left_join(speaker, listener) %>%
left_join(priors) %>%
rowwise %>%
select(scale, degree, stars, speaker.p, listener.p, prior.p) %>%
mutate(listener.p = ifelse(is.na(listener.p), 0, listener.p)) %>%
group_by(scale)
priors = read.csv("models/prior.csv")
speaker = read.csv("models/speaker.csv")
listener = read.csv("models/listener.csv")
data <- left_join(speaker, listener) %>%
left_join(priors) %>%
rowwise %>%
select(scale, degree, stars, speaker.p, listener.p, prior.p) %>%
mutate(listener.p = ifelse(is.na(listener.p), 0, listener.p)) %>%
group_by(scale)
data
md <- data %>%
do(run.rsa(., alpha = 4, useprior = FALSE, usenone = TRUE))
md
qplot(stars, listener.p, col=degree,
data = md) +
facet_wrap(~scale) +
geom_line(aes(y = pred), lty = 2)
qplot(c(1:5), priors$prior.p,
geom="bar", stat = "identity",
binwidth = 1, main="Priors over ratings")
md <- data %>%
do(run.rsa(., alpha = 4, useprior = FALSE, usenone = TRUE))
qplot(stars, listener.p, col=degree,
data = md) +
facet_wrap(~scale) +
geom_line(aes(y = pred), lty = 2)
md <- data %>%
do(run.rsa(., alpha = 10, useprior = FALSE, usenone = TRUE))
qplot(stars, listener.p, col=degree,
data = md) +
facet_wrap(~scale) +
geom_line(aes(y = pred), lty = 2)
md <- data %>%
do(run.rsa(., alpha = 10, useprior = FALSE, usenone = TRUE))
qplot(stars, listener.p, col=degree,
data = md) +
facet_wrap(~scale) +
geom_line(aes(y = pred), lty = 2, main="Model vs Human judgments")
qplot(stars, listener.p, col=degree,
data = md, main="Model vs Human judgments") +
facet_wrap(~scale) +
geom_line(aes(y = pred), lty = 2)
md <- data %>%
do(run.rsa(., alpha = 10, useprior = FALSE, usenone = TRUE))
qplot(stars, listener.p, col=degree,
data = md, main="Model vs Human judgments") +
facet_wrap(~scale) +
geom_line(aes(y = pred), lty = 2)
run.rsa <- function(d, alpha = 1, useprior = TRUE, usenone = FALSE) {
mat <- d %>%
select(stars, degree, speaker.p) %>%
spread(degree, speaker.p) %>%
mutate(hi = hi / sum(hi),
low = low / sum(low)) %>%
select(hi, low)
if (usenone) {
mat$none <- c(.8, .2, 0, 0, 0)
mat$bad <- c(.25, .5, .25, 0, 0)
}
d$pred <- round(as.numeric(mapply(norm.post, d$stars, d$degree,
MoreArgs = list(m = mat,
alpha = alpha,
useprior = useprior))),
digits=4)
return(d)
}
data <- left_join(speaker, listener) %>%
left_join(priors) %>%
rowwise %>%
select(scale, degree, stars, speaker.p, listener.p, prior.p) %>%
mutate(listener.p = ifelse(is.na(listener.p), 0, listener.p)) %>%
group_by(scale)
md <- data %>%
do(run.rsa(., alpha = 10, useprior = FALSE, usenone = TRUE))
qplot(stars, listener.p, col=degree,
data = md, main="Model vs Human judgments") +
facet_wrap(~scale) +
geom_line(aes(y = pred), lty = 2)
rm(list=ls())
source("analysis/useful_dplyr.R")
library("rjson")
setwd("~/Desktop/Projects/scalar_implicature/analysis")
setwd("~/Desktop/Projects/scalar_implicature")
files <- dir("production-results/e5/", pattern = "*.json")
d.raw <- data.frame()
d.raw
for (f in files) {
jf <- paste("production-results/e5/",f,sep="")
jd <- fromJSON(paste(readLines(jf), collapse=""))
id <- data.frame(workerid = jd$WorkerId,
scale = jd$answer$scale,
degree = jd$answer$degree,
stars = jd$answer$manipulation_level,
judgment = as.numeric(jd$answer$judgment),
language = jd$answer$language)
d.raw <- bind_rows(d.raw, id)
}
d.raw
d <- d.raw %>% filter(scale != "training1")
d
d %>%
mutate(stars = as.numeric(as.character(stars))/20)
d %>%
mutate(stars = as.numeric(as.character(stars))/20) %>%
group_by(scale, degree, stars)
d %>%
mutate(stars = as.numeric(as.character(stars))/20) %>%
group_by(scale, degree, stars) %>%
summarise(cil = ci.low(judgment),
cih = ci.high(judgment),
judgment = mean(judgment),
p = (judgment - 1)/4)
%>%
mutate(stars = as.numeric(as.character(stars))/20) %>%
group_by(scale, degree, stars)
d %>%
mutate(stars = as.numeric(as.character(stars))/20) %>%
group_by(scale, degree, stars)
?summarise
d %>%
mutate(stars = as.numeric(as.character(stars))/20) %>%
group_by(scale, degree, stars)
ms <- d %>%
mutate(stars = as.numeric(as.character(stars))/20) %>%
group_by(scale, degree, stars) %>%
summarise(cil = ci.low(judgment),
cih = ci.high(judgment),
judgment = mean(judgment),
p = (judgment - 1)/4)
s
ms
d %>%
mutate(stars = as.numeric(as.character(stars))/20) %>%
group_by(scale, degree, stars)
ms <- d %>%
mutate(stars = as.numeric(as.character(stars))/20) %>%
group_by(scale, degree, stars) %>%
summarise(cil = ci.low(judgment),
cih = ci.high(judgment),
judgment = mean(judgment),
p = (judgment - 1)/4)
ms
4.8677/5
4.866667 / 5
(4.866667 -1) / 4
rm(list=ls())
source("analysis/useful_dplyr.R")
library(rjson)
priors = read.csv("models/prior.csv")
speaker = read.csv("models/speaker.csv")
listener = read.csv("models/listener.csv")
speaker.lhd = function(d, alpha, cost = 0) {
speaker.prob = function(rating, degree, m, alpha) {
num = speaker.lhd(m[rating, degree], alpha)
norm = 0
for (i in 1:ncol(m)) {
norm = norm + speaker.lhd(m[rating, i], alpha)
}
return(num / norm)
}
#non-normalized posterior
nn.post = function(rating, degree, m, alpha, useprior) {
if (useprior) {
prior <- priors[rating, "prior.p"]
} else { #unif prior
prior = .2
}
speaker.prob(rating, degree, m, alpha) * prior
}
#normalized posterior
norm.post = function(rating, degree, m, alpha, useprior) {
nn = nn.post(rating, degree, m, alpha, useprior)
norm = 0
for (i in 1:5) {
norm = norm + nn.post(i, degree, m, alpha, useprior)
}
return(nn / norm)
}
run.rsa <- function(d, alpha = 1, useprior = TRUE, usenone = FALSE) {
mat <- d %>%
select(stars, degree, speaker.p) %>%
spread(degree, speaker.p) %>%
mutate(hi = hi / sum(hi),
low = low / sum(low)) %>%
select(hi, low)
if (usenone) {
mat$none <- c(.8, .2, 0, 0, 0)
mat$bad <- c(.25, .5, .25, 0, 0)
}
d$pred <- round(as.numeric(mapply(norm.post, d$stars, d$degree,
MoreArgs = list(m = mat,
alpha = alpha,
useprior = useprior))),
digits=4)
return(d)
}
data <- left_join(speaker, listener) %>%
left_join(priors) %>%
rowwise %>%
select(scale, degree, stars, speaker.p, listener.p, prior.p) %>%
mutate(listener.p = ifelse(is.na(listener.p), 0, listener.p)) %>%
group_by(scale)
data <- left_join(speaker, listener) %>%
left_join(priors) %>%
rowwise %>%
select(scale, degree, stars, speaker.p, listener.p, prior.p) %>%
mutate(listener.p = ifelse(is.na(listener.p), 0, listener.p)) %>%
group_by(scale)
md <- data %>%
do(run.rsa(., alpha = 10, useprior = FALSE, usenone = TRUE))
qplot(stars, listener.p, col=degree,
data = md, main="Model vs Human judgments") +
facet_wrap(~scale) +
geom_line(aes(y = pred), lty = 2)
data <- left_join(speaker, listener) %>%
left_join(priors) %>%
rowwise %>%
select(scale, degree, stars, speaker.p, listener.p, prior.p) %>%
mutate(listener.p = ifelse(is.na(listener.p), 0, listener.p)) %>%
group_by(scale)
md <- data %>%
do(run.rsa(., alpha = 10, useprior = FALSE, usenone = TRUE))
run.rsa <- function(d, alpha = 1, useprior = TRUE, usenone = FALSE) {
mat <- d %>%
select(stars, degree, speaker.p) %>%
spread(degree, speaker.p) %>%
mutate(hi = hi / sum(hi),
low = low / sum(low)) %>%
select(hi, low)
if (usenone) {
mat$none <- c(.8, .2, 0, 0, 0)
mat$bad <- c(.25, .5, .25, 0, 0)
}
d$pred <- round(as.numeric(mapply(norm.post, d$stars, d$degree,
MoreArgs = list(m = mat,
alpha = alpha,
useprior = useprior))),
digits=4)
return(d)
}
md <- data %>%
do(run.rsa(., alpha = 10, useprior = FALSE, usenone = TRUE))
norm.post = function(rating, degree, m, alpha, useprior) {
nn = nn.post(rating, degree, m, alpha, useprior)
norm = 0
for (i in 1:5) {
norm = norm + nn.post(i, degree, m, alpha, useprior)
}
return(nn / norm)
}
nn.post = function(rating, degree, m, alpha, useprior) {
if (useprior) {
prior <- priors[rating, "prior.p"]
} else { #unif prior
prior = .2
}
speaker.prob(rating, degree, m, alpha) * prior
}
speaker.prob = function(rating, degree, m, alpha) {
num = speaker.lhd(m[rating, degree], alpha)
norm = 0
for (i in 1:ncol(m)) {
norm = norm + speaker.lhd(m[rating, i], alpha)
}
return(num / norm)
}
speaker.lhd = function(d, alpha, cost = 0) {
exp(alpha*(log(d) - cost)) #Rethink alpha and costs?
}
data <- left_join(speaker, listener) %>%
left_join(priors) %>%
rowwise %>%
select(scale, degree, stars, speaker.p, listener.p, prior.p) %>%
mutate(listener.p = ifelse(is.na(listener.p), 0, listener.p)) %>%
group_by(scale)
md <- data %>%
do(run.rsa(., alpha = 10, useprior = FALSE, usenone = TRUE))
qplot(stars, listener.p, col=degree,
data = md, main="Model vs Human judgments") +
facet_wrap(~scale) +
geom_line(aes(y = pred), lty = 2)
md <- data %>%
do(run.rsa(., alpha = 20, useprior = FALSE, usenone = TRUE))
qplot(stars, listener.p, col=degree,
data = md, main="Model vs Human judgments") +
facet_wrap(~scale) +
geom_line(aes(y = pred), lty = 2)
md <- data %>%
do(run.rsa(., alpha = 0, useprior = FALSE, usenone = TRUE))
?corr
?cor
cor(md$stars, listener.p)
cor(stars, listener.p, data=md)
cor
?cor
md$stars
md
md <- data %>%
do(run.rsa(., alpha = 1, useprior = FALSE, usenone = TRUE))
md$pred
md$listener.p
cor(md$pred, md$listener.p)
md <- data %>%
do(run.rsa(., alpha = 2, useprior = FALSE, usenone = TRUE))
cor(md$pred, md$listener.p)
md <- data %>%
do(run.rsa(., alpha = 3, useprior = FALSE, usenone = TRUE))
cor(md$pred, md$listener.p)
md <- data %>%
do(run.rsa(., alpha = 10, useprior = FALSE, usenone = TRUE))
cor(md$pred, md$listener.p)
md <- data %>%
do(run.rsa(., alpha = 15, useprior = FALSE, usenone = TRUE))
cor(md$pred, md$listener.p)
md <- data %>%
do(run.rsa(., alpha = 20, useprior = FALSE, usenone = TRUE))
cor(md$pred, md$listener.p)
alphas = seq(from=1, to=25)
cors = sapply(alphas, FUN=function(a) {
md <- data %>%
do(run.rsa(., alpha = a, useprior = FALSE, usenone = TRUE))
return cor(md$pred, md&listner.p)
})
cors = sapply(alphas, FUN=function(a) {
md <- data %>%
do(run.rsa(., alpha = a, useprior = FALSE, usenone = TRUE))
return cor(md$pred, md&listner.p)
})
cor(md$pred, md&listner.p)
md$pred
md&listener.p
md
md <- data %>%
do(run.rsa(., alpha = a, useprior = FALSE, usenone = TRUE))
cors = sapply(alphas, FUN=function(a) {
md <- data %>%
do(run.rsa(., alpha = a, useprior = FALSE, usenone = TRUE))
return cor(md$pred, md&listener.p)
})
cors = sapply(alphas, FUN=function(a){
md <- data %>%
do(run.rsa(., alpha = a, useprior = FALSE, usenone = TRUE))
return cor(md$pred, md&listener.p)
})
alphas
alphas
?sapply
md <- data %>%
do(run.rsa(., alpha = 20, useprior = FALSE, usenone = TRUE))
cors = sapply(alphas, FUN=function(a){
md <- data %>%
do(run.rsa(., alpha = a, useprior = FALSE, usenone = TRUE))
return cor(md$pred, md&listener.p)
})
cors = sapply(alphas, FUN=function(n){
md <- data %>%
do(run.rsa(., alpha = n, useprior = FALSE, usenone = TRUE))
return cor(md$pred, md&listener.p)
})
cors = sapply(alphas, FUN=function(n) {
md <- do(run.rsa(data, alpha = n, useprior = FALSE, usenone = TRUE))
return cor(md$pred, md&listener.p)
})
cors = sapply(alphas, FUN=function(n) {
md <- data %>%
do(run.rsa(., alpha = n, useprior = FALSE, usenone = TRUE))
return cor(md$pred, md&listener.p)
})
cors = sapply(alphas, FUN=function(n) {
#md <- data %>%
# do(run.rsa(., alpha = n, useprior = FALSE, usenone = TRUE))
#return cor(md$pred, md&listener.p)
})
cors = sapply(alphas, FUN=function(n) {
#md <- data %>%
# do(run.rsa(., alpha = n, useprior = FALSE, usenone = TRUE))
return alphas
#return cor(md$pred, md&listener.p)
})
cors = sapply(alphas, FUN=function(n) {
#md <- data %>%
# do(run.rsa(., alpha = n, useprior = FALSE, usenone = TRUE))
alphas
#return cor(md$pred, md&listener.p)
})
cors = sapply(alphas, FUN=function(n) {
md <- data %>%
do(run.rsa(., alpha = n, useprior = FALSE, usenone = TRUE))
cor(md$pred, md&listener.p)
})
cors
md <- data %>%
do(run.rsa(., alpha = 20, useprior = FALSE, usenone = TRUE))
md
cors = sapply(alphas, FUN=function(n) {
md <- data %>%
do(run.rsa(., alpha = n, useprior = FALSE, usenone = TRUE))
cor(md$pred, md$listener.p)
})
cors
plot(cors)
max(cors)
which(cors, max(cors))
which(cors[max(cors)])
which(cors = max(cors))
?which
which(cors == max(cors))
best.alpha = which(cors == max(cors))
best.alpha
md <- data %>%
do(run.rsa(., alpha = best.alpha, useprior = FALSE, usenone = TRUE))
ggplot(alphas)
ggplot2(alphas)
qplot(alphas)
?qplot
qplot(alphas, seq(from=1, to=25,))
qplot(cors, alphas)
qplot(alphas, cors)
md <- data %>%
do(run.rsa(., alpha = best.alpha, useprior = FALSE, usenone = TRUE))
qplot(stars, listener.p, col=degree,
data = md, main="Model vs Human judgments") +
facet_wrap(~scale) +
geom_line(aes(y = pred), lty = 2)
